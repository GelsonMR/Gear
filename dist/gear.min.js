function removeMessage(a) {
    $(a).is("[data-gear-pop-message]") ? ($('.message[data-gear-pop-message="' + $(a).attr("data-gear-pop-message") + '"]').remove(), 
    $(a).removeAttr("data-gear-pop-message data-gear-pop-message-pref").removeClass("pop")) : $(a).removeClass("pop").removeAttr("data-gear-pop-message-pref").children(".message").remove(), 
    $(a).removeAttr("data-gear-pop-message-balloon data-gear-pop-message-background data-gear-pop-message-color data-gear-pop-message-pref data-gear-pop-message-content");
}

angular.module("gearUi", []).provider("gear", function() {
    this.$get = function() {
        return {
            menu: function() {
                return {};
            }
        };
    };
}).directive("gearFormControl", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(a, b, c, d) {
            d.$parsers.push(function(a) {
                return angular.isUndefined(a) || null === a || "" === a ? c.$removeClass("gear-not-null") : c.$addClass("gear-not-null"), 
                a;
            }), d.$formatters.push(function(a) {
                return angular.isUndefined(a) || null === a || "" === a ? c.$removeClass("gear-not-null") : c.$addClass("gear-not-null"), 
                a;
            });
        }
    };
}).directive("gearOnlyNumber", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(a, b, c, d) {
            var e = function(a) {
                return 0 == a || a ? (a = a.toString().replace(/[^0-9]+/g, ""), isNaN(a) ? "" : a) : void 0;
            };
            b.bind("keyup keydown keypress focusout", function() {
                d.$setViewValue(e(d.$viewValue)), d.$render();
            }), d.$parsers.push(function(a) {
                return e(a);
            }), d.$formatters.push(function(a) {
                return e(a);
            });
        }
    };
}).directive("gearMaskCnpj", function(a) {
    return {
        require: "ngModel",
        link: function(b, c, d, e) {
            c.bind("keyup keydown keypress focusout", function() {
                e.$setViewValue(a(e.$viewValue)), e.$render();
            }), c.bind("keypress", function(a) {
                return e.$viewValue && 18 == e.$viewValue.length && c[0].selectionStart == c[0].selectionEnd ? !1 : void 0;
            }), e.$formatters.push(function(b) {
                return a(b);
            });
        }
    };
}).directive("gearMaskCep", function(a) {
    return {
        require: "ngModel",
        link: function(b, c, d, e) {
            c.bind("keyup keydown keypress focusout", function() {
                e.$setViewValue(a(e.$viewValue)), e.$render();
            }), c.bind("keypress", function(a) {
                return e.$viewValue && 9 == e.$viewValue.length && c[0].selectionStart == c[0].selectionEnd ? !1 : void 0;
            }), e.$formatters.push(function(b) {
                return a(b);
            });
        }
    };
}).directive("gearMaskPhone", function(a) {
    return {
        require: "ngModel",
        link: function(b, c, d, e) {
            c.bind("keyup keydown keypress focusout", function() {
                e.$setViewValue(a(e.$viewValue)), e.$render();
            }), c.bind("keypress", function(a) {
                return e.$viewValue && 15 == e.$viewValue.length && c[0].selectionStart == c[0].selectionEnd ? !1 : void 0;
            }), e.$formatters.push(function(b) {
                return a(b);
            });
        }
    };
}).directive("gearMaskDate", function(a) {
    return {
        require: "ngModel",
        link: function(a, b, c, d) {
            var e = function(a) {
                return a ? (a = a.toString().replace(/[^0-9]+/g, ""), a.length > 2 && (a = a.substring(0, 2) + "/" + a.substring(2)), 
                a.length > 5 && (a = a.substring(0, 5) + "/" + a.substring(5)), a.length > 10 && (a = a.substring(0, 10)), 
                a) : "";
            };
            b.bind("keyup keydown keypress focusout", function() {
                d.$setViewValue(e(d.$viewValue)), d.$render();
            }), b.bind("keypress", function(a) {
                return d.$viewValue && 10 == d.$viewValue.length && b[0].selectionStart == b[0].selectionEnd ? !1 : void 0;
            }), d.$parsers.push(function(a) {
                return e(a);
            }), d.$formatters.push(function(a) {
                return e(a);
            });
        }
    };
}).directive("gearMaskTime", function(a) {
    return {
        require: "ngModel",
        link: function(a, b, c, d) {
            var e = function(a) {
                return a ? (a = a.toString().replace(/[^0-9]+/g, ""), a.length > 2 && (a = a.substring(0, 2) + ":" + a.substring(2)), 
                a.length > 5 && (a = a.substring(0, 5)), a) : "";
            };
            b.bind("keyup keydown keypress focusout", function() {
                d.$setViewValue(e(d.$viewValue)), d.$render();
            }), b.bind("keypress", function(a) {
                return d.$viewValue && 5 == d.$viewValue.length && b[0].selectionStart == b[0].selectionEnd ? !1 : void 0;
            }), d.$parsers.push(function(a) {
                return e(a);
            }), d.$formatters.push(function(a) {
                return e(a);
            });
        }
    };
}).directive("gearFormatDate", function(a) {
    return {
        require: "ngModel",
        scope: {
            ngModel: "=",
            gearFormatDate: "=?",
            gearFormatError: "=?",
            gearMax: "=?",
            gearMin: "=?"
        },
        link: function(b, c, d, e) {
            function f(a) {
                return h(a) ? a = a.getDate() + "/" + a.getMonth() + "/" + a.getFullYear() : a;
            }
            function g(c) {
                var d = c ? c.length : 0, f = 10 == d ? c.split("/") : void 0, g = f ? new Date(f[2], f[1], 0).getDate() : void 0;
                switch (months = [ "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" ], 
                valid = !0, c = f ? new Date(f[2], f[1] - 1, f[0]) : c, b.gearFormatError = {}, 
                !0) {
                  case d && 10 > d:
                    b.gearFormatError = {
                        type: "length",
                        message: "Digite no mínimo 8 caracteres"
                    }, valid = !1;
                    break;

                  case f && (f[1] < 1 || f[1] > 12):
                    b.gearFormatError = {
                        type: "month",
                        message: "Mês inválido"
                    }, valid = !1;
                    break;

                  case f && f[0] > g:
                    b.gearFormatError = {
                        type: "days",
                        message: months[f[1] - 1] + " possui apenas " + g + " dias"
                    }, valid = !1;
                    break;

                  case i && h(i) && c && c.getTime() > i.getTime():
                    b.gearFormatError = {
                        type: "maxDate",
                        message: "Data maior do que " + a("date")(i, "dd/MM/yyyy")
                    }, valid = !1;
                    break;

                  case j && h(j) && c && c.getTime() < j.getTime():
                    b.gearFormatError = {
                        type: "minDate",
                        message: "Data menor do que " + a("date")(j, "dd/MM/yyyy")
                    }, valid = !1;
                    break;

                  default:
                    delete b.gearFormatError;
                }
                e.$setValidity("gearError", valid);
            }
            function h(a) {
                return "[object Date]" !== Object.prototype.toString.call(a) || "boolean" == typeof a ? !1 : !isNaN(a.getTime());
            }
            var i, j;
            e.$parsers.push(function(a) {
                return g(a), a;
            }), e.$formatters.push(function(a) {
                return a = f(a), g(a), a;
            }), b.$watch("gearMax", function(a, c) {
                i = b.gearMax, h(i) && i.setHours(0, 0, 0, 0);
                var a;
                a = f(b.ngModel), g(b.ngModel);
            }), b.$watch("gearMin", function(a, c) {
                j = b.gearMin, h(j) && j.setHours(0, 0, 0, 0);
                var a;
                a = f(b.ngModel), g(b.ngModel);
            });
        }
    };
}).directive("gearFormatTime", function(a) {
    return {
        require: "ngModel",
        scope: {
            ngModel: "=",
            gearFormatTime: "=?",
            gearFormatError: "=?"
        },
        link: function(a, b, c, d) {
            function e(a) {
                return a = g(a) ? a.getHours() + ":" + a.getMinutes() : a;
            }
            function f(b) {
                var c = b ? b.length : 0, e = 5 == c ? b.split(":") : void 0, f = !0;
                switch (a.gearFormatError = {}, !0) {
                  case c && 5 > c:
                    a.gearFormatError = "Digite no mínimo 4 caracteres", f = !1;
                    break;

                  case e && e[0] > 23:
                    a.gearFormatError = "Hora inválida", f = !1;
                    break;

                  case e && e[1] > 59:
                    a.gearFormatError = "Minuto inválido", f = !1;
                    break;

                  default:
                    delete a.gearFormatError;
                }
                d.$setValidity("gearError", f);
            }
            function g(a) {
                return "[object Date]" !== Object.prototype.toString.call(a) || "boolean" == typeof a ? !1 : !isNaN(a.getTime());
            }
            d.$parsers.push(function(a) {
                return a = e(a), f(a), a;
            }), d.$formatters.push(function(a) {
                return a = e(a), f(a), a;
            });
        }
    };
}).directive("gear", function() {
    return {
        restrict: "A",
        scope: {},
        controller: function(a, b, c) {
            a.$parent.gear = {
                author: "Gelson M. Rodrigues",
                email: "GelsonMRodrigues@hotmail.com",
                version: "0.1"
            };
        }
    };
}).directive("gearDialogGroup", function() {
    return {
        restrict: "E",
        require: "^gear",
        replace: !0,
        transclude: !0,
        template: '<div class="gear-dialog-group" ng-class="{\'gear-active\':hasOpenDialog()}" ng-transclude></div>',
        scope: {},
        controller: function(a, b, c) {
            a.lol = !0, a.dialogs = {}, this.openDialogs = {}, a.openDialogs = this.openDialogs, 
            a.focusedDialog = {}, this.register = function(b) {
                b.order = 0, a.dialogs[b.id] = b;
            }, this.registerOpen = function(b) {
                if (this.unfocusAll(), a.openDialogs[b.id] || (a.openDialogs[b.id] = b), a.hasOpenDialog()) for (var c in a.openDialogs) a.openDialogs[c].order++;
            }, this.unregisterOpen = function(b) {
                if (a.openDialogs[b.id].order = 0, delete a.openDialogs[b.id], a.hasOpenDialog()) for (var c in a.openDialogs) a.openDialogs[c].order--, 
                1 === a.dialogs[c].order && a.dialogs[c].focus();
            }, a.hasOpenDialog = function() {
                return Object.keys(a.openDialogs).length;
            }, a.dialogs.closeAll = function() {
                for (var b in a.openDialogs) a.openDialogs[b].isFocused = !1, a.openDialogs[b].isOpened = !1, 
                a.openDialogs[b].order = 0, delete a.openDialogs[b];
            }, this.unfocusAll = function() {
                for (var b in a.dialogs) a.dialogs[b].isFocused = !1;
            }, a.$parent.gear.dialogs = a.dialogs;
        }
    };
}).directive("gearDialog", function() {
    return {
        restrict: "E",
        require: "^gearDialogGroup",
        replace: !0,
        transclude: !0,
        template: '<div class="gear-dialog-wrap" ng-class="{\'gear-open\': isOpened, \'gear-focus\': isFocused}" ng-click="close($event)"><div class="gear-mt gear-dialog" ng-style="{\'width\': gearWidth}"><div class="gear-dialog-title">{{gearTitle}}</div><div class="gear-dialog-content" ng-transclude></div></div></div>',
        scope: {
            id: "@",
            gearWidth: "@",
            gearTitle: "@"
        },
        link: function(a, b, c, d) {
            d.register(a), a.isOpened = !1, a.isFocused = !1, a.open = function() {
                d.registerOpen(a), a.isOpened = !0, a.isFocused = !0;
            }, a.focus = function() {
                a.isFocused = !0;
            }, a.close = function(b) {
                (!b || b.target.classList.contains("gear-dialog-wrap")) && (d.unregisterOpen(a), 
                a.isOpened = !1, a.isFocused = !1);
            };
        }
    };
}).directive("gearPanel", function() {
    return {
        restrict: "E",
        replace: !0,
        transclude: !0,
        template: '<div class="gear-mt gear-panel"><h2 class="gear-panel-title" ng-if="gearTitle">{{gearTitle}}</h2><div class="gear-panel-content" ng-transclude></div></div>',
        scope: {
            id: "@",
            gearTitle: "@"
        },
        link: function(a, b, c, d) {}
    };
}).directive("gearTooltip", function() {
    return {
        restrict: "A",
        scope: {
            gearTooltip: "@",
            gearColor: "@",
            gearWidth: "@"
        },
        link: function(a, b, c, d) {
            var e = {
                content: a.gearTooltip
            };
            e.color = a.gearColor || "blue", a.gearWidth && (e.width = a.gearWidth), Gear(b).tooltip(e);
        }
    };
}).directive("gearColorPickerGroup", function(a) {
    return {
        restrict: "E",
        transclude: !0,
        replace: !0,
        require: [ "^form", "ngModel" ],
        scope: {
            ngModel: "=",
            gearId: "@",
            gearName: "@",
            gearClass: "=?",
            gearShape: "@",
            gearPrimaryInfo: "@"
        },
        templateUrl: "template/color-picker-group.html",
        link: function(a, b, c, d, e) {
            function f(a) {
                function b(a) {
                    return isNaN(a) ? "00" : c[(a - a % 16) / 16] + c[a % 16];
                }
                var c = [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f" ];
                return a = a.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/), "#" + (b(a[1]) + b(a[2]) + b(a[3])).toUpperCase();
            }
            b.find("gear-form-transclude").replaceWith(e()), a.colorTypes = [ "red", "pink", "purple", "deepPurple", "indigo", "blue", "lightBlue", "cyan", "teal", "green", "lightGreen", "lime", "yellow", "amber", "orange", "deepOrange", "brown", "grey", "blueGrey" ], 
            a.colorVariations = [ "50", "100", "200", "300", "400", "500", "600", "700", "800", "900", "A100", "A200", "A400", "A700" ], 
            a.switchOpened = !1, a.colorTypeSelected = void 0, a.colorSelected = void 0, a.switchOpen = function() {
                a.colorTypeSelected = void 0, a.switchOpened = !0;
            }, a.switchClose = function() {
                a.switchOpened = !1;
            }, a.switchVarTop = void 0, a.switchVarArrowLeft = void 0, a.setColorType = function(c, d) {
                return a.colorTypeSelected = d, void 0 == d ? void a.selectColor() : (a.switchVarTop = angular.element(c.currentTarget).offset().top - angular.element(b.find(".switch-color")).offset().top - 50, 
                void (a.switchVarArrowLeft = angular.element(c.currentTarget).offset().left - angular.element(b.find(".switch-color")).offset().left + angular.element(c.currentTarget).width() / 2 - 6));
            }, a.colorClass = function(a) {
                return a;
            }, a.checkAccentColor = function(b) {
                return "brown" != a.colorTypeSelected && "grey" != a.colorTypeSelected && "blueGrey" != a.colorTypeSelected || "A100" != b && "A200" != b && "A400" != b && "A700" != b ? !0 : !1;
            }, angular.element(document).bind("mousedown focusin", function(c) {
                !angular.element(b).find(c.target).length && a.switchOpened && (a.switchClose(), 
                a.$apply());
            }), a.selectColor = function(b) {
                a.colorSelected = b ? f($(b.currentTarget).css("background-color")).toUpperCase() : void 0, 
                d[1].$setViewValue(a.colorSelected ? a.colorSelected : "Nenhuma cor selecionada"), 
                d[1].$render(), d[0][a.gearName].$setDirty(), a.switchClose();
            }, d[1].$formatters.push(function(b) {
                return a.colorSelected = b, d[1].$setViewValue(b ? b : "Nenhuma cor selecionada"), 
                d[0].$setPristine(), b;
            });
        }
    };
}).directive("gearFormAutoComplete", function(a) {
    return {
        restrict: "E",
        transclude: !0,
        replace: !0,
        require: [ "^form", "ngModel" ],
        scope: {
            ngModel: "=",
            gearId: "@",
            gearRequired: "=?",
            gearLabel: "@",
            gearList: "=?",
            gearListHide: "=?",
            gearError: "=?",
            gearPrimaryInfo: "@",
            gearActiveItem: "=?",
            gearSelectedItem: "=?",
            gearNoFindMessage: "@",
            gearKey: "@"
        },
        template: '<div class="gear-form-group"><i class="material-icons gear-icon">search</i><input type="text" ng-class="{\'gear-error\': showList && !filteredList.length && ngModel}" ng-model="ngModel" ng-class class="gear-form-control txt-data-list-search" ng-focus="open()" gear-form-control><label class="gear-form-floating-label">{{gearLabel}}</label><div class="gear-message" ng-if="showList && !filteredList.length && ngModel">{{gearNoFindMessage}}</div><gear-form-transclude></gear-form-transclude><div class="data-list-search" ng-show="filteredList.length && showList"><ul><li ng-class="{\'selected\':item.selected}" ng-repeat="item in (filteredList = (gearList | filter:criterioHideFilter() | filter:ngModel))" ng-click="selectItem(item)"><span class="primary-info">{{item[gearPrimaryInfo]}}</span></li></ul></div></div>',
        link: function(b, c, d, e, f) {
            c.find("gear-form-transclude").replaceWith(f()), b.showList = !1, b.filteredList = [], 
            b.gearError = function() {
                return b.showList && !b.filteredList.length && b.ngModel;
            }, b.open = function() {
                b.showList = !0, b.filteredList.length && b.activateItem(b.filteredList[0]);
            }, b.close = function() {
                b.showList = !1, b.deactivateAll();
            }, b.deactivateAll = function(a) {
                b.gearList.forEach(function(a) {
                    a.selected && delete a.selected;
                }), delete b.gearActiveItem;
            }, b.activateItem = function(a) {
                b.deactivateAll(), b.gearList.forEach(function(c) {
                    a[b.gearKey] == c[b.gearKey] && (c.selected = !0, b.gearActiveItem = c);
                });
            }, b.selectItem = function(a) {
                b.deactivateAll(), b.gearList.forEach(function(c) {
                    a[b.gearKey] == c[b.gearKey] && (b.gearSelectedItem = c, b.ngModel = c[b.gearPrimaryInfo]);
                }), b.close();
            }, b.criterioHideFilter = function() {
                return b.gearListHide ? function(a) {
                    for (i = 0; i < b.gearListHide.length; i++) if (a[b.gearKey] === b.gearListHide[i][b.gearKey]) return !1;
                    return !0;
                } : !0;
            }, angular.element(document).bind("mousedown focusin", function(d) {
                a(function() {
                    !angular.element(c).find(d.target).length && b.showList && (b.close(), b.$apply());
                });
            }), c.find("input").on("keydown", function(a) {
                function c(a) {
                    for (a ? "next" == a ? a = 1 : "prev" == a && (a = -1) : a = 0, i = 0; i < k; i++) j[i].selected && (d = j[i], 
                    e = i);
                    if (h = e + a === -1 ? j[k - 1] : e + a === k ? j[0] : j[e + a], d) {
                        for (i = 0; i < m; i++) l[i][b.gearKey] != h[b.gearKey] || (f = l[i], g = i);
                        b.activateItem(f), b.$digest();
                    }
                }
                b.gearActiveItem && b.activateItem(b.gearActiveItem);
                var d, e, f, g, h, j = b.filteredList, k = j.length, l = b.gearList, m = l.length;
                switch (a.which) {
                  case 38:
                    c("prev");
                    break;

                  case 40:
                    c("next");
                    break;

                  case 13:
                    b.gearActiveItem && !b.gearSelectedItem && (b.selectItem(b.gearActiveItem), b.$apply());
                }
                b.$digest();
            }), c.find("input").on("keyup", function(a) {
                b.showList || (b.open(), b.$digest());
            }), c.find("input").on("input", function(a) {
                delete b.gearSelectedItem, delete b.gearActiveItem, b.filteredList.length && b.activateItem(b.filteredList[0]), 
                b.showList || b.open(), b.gearActiveItem && b.ngModel && b.gearActiveItem[b.gearPrimaryInfo].toUpperCase() == b.ngModel.toUpperCase() && (b.ngModel = b.gearActiveItem[b.gearPrimaryInfo], 
                b.selectItem(b.gearActiveItem)), b.$apply();
            });
        }
    };
}).directive("gearDatePicker", function(a) {
    return {
        restrict: "E",
        require: "ngModel",
        scope: {
            ngModel: "=",
            dateSelected: "=?",
            gearSelect: "&?",
            gearError: "=?",
            gearErrorMessage: "=?",
            gearMin: "=?",
            gearMax: "=?"
        },
        templateUrl: "template/date-picker.html",
        link: function(b, c, d, e) {
            function f(a) {
                return "[object Date]" !== Object.prototype.toString.call(a) || "boolean" == typeof a ? !1 : !isNaN(a.getTime());
            }
            function g(a, b) {
                var c = new Date(b, a + 1, 0), d = (c.getDate(), new Date(b, a, 1)), e = -d.getDay(), f = Math.ceil((d.getDay() + c.getDate()) / 7), g = [];
                for (i = 0; i < f; i++) for (g[i] = [], j = 0; j < 7; j++) e++, g[i][j] = new Date(b, a, e);
                return g;
            }
            b.$watch("gearError", function(a) {
                b.gearError ? c.addClass("gear-error") : c.removeClass("gear-error");
            }), b.weekDays = [ "Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado" ], 
            b.daysOfMonth = [ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 ], b.months = [ "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" ], 
            b.activeMonth = b.ngModel, b.weeks = [], b.goTo = function(a) {
                b.weeks.length && b.activeMonth && b.activeMonth.getMonth() == a.getMonth() && b.activeMonth.getFullYear() == a.getFullYear() || (b.activeMonth = a, 
                b.weeks = g(a.getMonth(), a.getFullYear()));
            }, b.goToSelected = function() {
                b.ngModel && b.goTo(b.ngModel);
            }, b.goToday = function() {
                b.goTo(new Date());
            }, e.$parsers.push(function(a) {
                return f(a) ? (b.goToSelected(), a) : null;
            }), e.$formatters.push(function(a) {
                return f(a) ? (b.goToSelected(), a) : null;
            }), f(b.ngModel) || (b.ngModel = ""), b.ngModel ? b.goToSelected() : b.goToday(), 
            b.goNext = function() {
                var a = b.activeMonth;
                b.goTo(new Date(a.getFullYear(), a.getMonth() + 1));
            }, b.goPrev = function() {
                var a = b.activeMonth;
                b.goTo(new Date(a.getFullYear(), a.getMonth() - 1));
            }, b.selectedDate = function() {
                if (!b.ngModel) return "";
                var a, c = b.weekDays[b.ngModel.getDay()], d = c, e = b.ngModel.getDate(), f = b.months[b.ngModel.getMonth()];
                return a = d, a + ", " + e + " de " + f;
            }, b.selectedYear = function() {
                return b.ngModel ? b.ngModel.getFullYear() : !1;
            }, b.getViewCalendar = function() {
                return b.months[b.activeMonth.getMonth()] + " de " + b.activeMonth.getFullYear();
            }, b.year = function() {
                return b.ngModel.getFullYear();
            }, b.selectDay = function(c) {
                b.ngModel = c, (b.activeMonth.getMonth() != c.getMonth() || b.activeMonth.getFullYear() != c.getFullYear()) && b.goToSelected(), 
                a(function() {
                    b.gearSelect(c);
                });
            }, b.isSelectedDay = function(a) {
                var c = a, d = b.ngModel;
                return c.setHours(0, 0, 0, 0), b.ngModel ? (d.setHours(0, 0, 0, 0), c.getTime() === d.getTime()) : !1;
            }, b.isToday = function(a) {
                var b = a, c = new Date();
                return b.setHours(0, 0, 0, 0), c.setHours(0, 0, 0, 0), b.getTime() === c.getTime();
            }, b.monthControl = function(a) {
                switch (a.which) {
                  case 37:
                    b.goPrev(), a.preventDefault();
                    break;

                  case 39:
                    b.goNext(), a.preventDefault();
                    break;

                  case 40:
                    c.find(".day.current-month:first button")[0].focus(), a.preventDefault();
                }
            }, b.dayControl = function(d) {
                var e = angular.element(d.target).parent(), f = e.prev(), g = e.next(), h = e.parent(), i = h.prev(), j = h.next(), k = i.children().eq(e.index()), l = j.children().eq(e.index());
                switch (d.which) {
                  case 37:
                    f && f.is(".last-month") || e.is(":first-child") && h.is(":first-child") ? (b.goPrev(), 
                    a(function() {
                        c.find(".day.current-month:last button").focus();
                    })) : f.length ? f.children("button").focus() : h.prev().find(":last-child button").focus(), 
                    d.preventDefault();
                    break;

                  case 38:
                    h.is(":first-child") ? c.find(".month-control").focus() : k.is(".current-month") ? k.children("button").focus() : i.find(".current-month:first button").focus(), 
                    d.preventDefault();
                    break;

                  case 39:
                    g && g.is(".next-month") || e.is(":last-child") && h.is(":last-child") ? (b.goNext(), 
                    a(function() {
                        c.find(".day.current-month:first button").focus();
                    })) : g.length ? g.children("button").focus() : h.next().find(":first-child button").focus(), 
                    d.preventDefault();
                    break;

                  case 40:
                    h.is(":last-child") ? (b.goNext(), c.find(".month-control").focus()) : l.is(".current-month") ? l.children("button").focus() : j.find(".current-month:last button").focus(), 
                    d.preventDefault();
                }
            }, b.invalidDate = function(a) {
                var c, d, e;
                return c = a, d = b.gearMin, e = b.gearMax, c && c.setHours(0, 0, 0, 0), d && d.setHours(0, 0, 0, 0), 
                e && e.setHours(0, 0, 0, 0), d && c.getTime() < d.getTime() || e && c.getTime() > e.getTime();
            };
        }
    };
}).directive("gearDatePickerGroup", function(a, b) {
    return {
        restrict: "E",
        require: [ "^form", "ngModel" ],
        scope: {
            ngModel: "=",
            gearId: "@",
            gearLabel: "@",
            gearFormat: "@",
            gearName: "@",
            gearShow: "=?",
            gearErrorMessage: "=?",
            gearMin: "=?",
            gearMax: "=?"
        },
        templateUrl: "template/date-picker-group.html",
        replace: !0,
        link: function(c, d, e, f) {
            "autocomplete" in e && d.find("input:first").attr("autocomplete", e.autocomplete), 
            c.required = "required" in e, c.isInvalid = function() {
                return c.picker.invalid && c.input.$dirty;
            }, c.input = f[0][c.gearName], c.required = "required" in e, c.gearFormat = c.gearFormat || "dd/MM/yyyy", 
            c.picker = {
                model: c.ngModel
            }, c.openPicker = function() {
                c.gearShow = !0;
            }, c.closePicker = function() {
                c.gearShow = !1, c.picker.text = a("date")(c.ngModel, c.gearFormat);
            }, c.$watch("picker.text", function(a, b) {
                return a ? void (!c.picker.text || c.picker.invalid && "minDate" != c.picker.invalid.type && "maxDate" != c.picker.invalid.type ? c.picker.model = !1 : (a = a.split("/"), 
                c.picker.model = new Date(a[2], a[1] - 1, a[0]))) : void (c.picker.model = c.picker.text);
            }), c.$watch("picker.model", function() {
                c.ngModel = c.picker.model;
            }), c.$watchCollection("picker.invalid", function(a) {
                if (c.picker.text && (!a || "minDate" == a.type || "maxDate" == a.type)) {
                    var b = c.picker.text;
                    b = b.split("/"), b = new Date(b[2], b[1] - 1, b[0]), c.picker.model = b;
                }
            }), f[1].$formatters.push(function(b) {
                return b ? c.picker.text = a("date")(b, c.gearFormat) : 0 != b && (c.picker.text = ""), 
                b;
            }), d.find("input").bind("focus", function() {
                c.openPicker(), c.$digest();
            }), angular.element(document).bind("mousedown focusin", function(a) {
                b(function() {
                    !angular.element(d).find(a.target).length && c.gearShow && (c.gearShow = !1, c.$apply());
                });
            });
        }
    };
}).directive("gearHoverCopy", function(a, b) {
    return {
        restrict: "A",
        link: function(c, d, e) {
            d.bind("mousemove", function(c) {
                a.cancel(b.timeout), b.setTarget(d, c);
            }), d.bind("mouseout", function(c) {
                a.cancel(b.timeout), b.timeout = a(function() {
                    b.resetTarget();
                }, 500);
            });
        }
    };
}).directive("gearCopyButton", function(a, b) {
    return {
        restrict: "E",
        replace: !0,
        template: '<button type="button" class="gear-hover-copy-button" ng-click="$parent.click()" ng-mouseover="$parent.mouseover()" ng-mouseout="$parent.mouseout()" ng-if="show" ng-style="{\'top\': $parent.location.y, \'left\': $parent.location.x}" title="Copiar para a área de transferência"><i class="material-icons">content_copy</i></button>',
        scope: {
            gearTarget: "=?"
        },
        link: function(c, d, e) {
            function f(a) {
                if (a.select) a.select(); else {
                    var b = document.createRange();
                    b.selectNodeContents(a);
                    var c = window.getSelection();
                    c.removeAllRanges(), c.addRange(b);
                }
                document.execCommand("copy"), window.getSelection().removeAllRanges();
            }
            var g;
            c.show = !1, c.showButton = function() {
                c.show = !0;
            }, c.hideButton = function() {
                c.show = !1;
            };
            var g;
            b.targetChanged(function(d) {
                g = b.getTarget(), g ? (c.showButton(), a(function() {
                    c.location = {
                        x: d.pageX,
                        y: angular.element(g).offset().top - (window.pageYOffset || document.documentElement.scrollTop)
                    };
                }), c.showButton()) : (c.location = {}, c.hideButton()), c.$digest();
            }), c.click = function() {
                f(g[0]), a(function() {
                    b.resetTarget();
                });
            }, c.mouseover = function(c) {
                a.cancel(b.timeout);
            }, c.mouseout = function(c) {
                a.cancel(b.timeout), b.timeout = a(function() {
                    b.resetTarget();
                }, 500);
            };
        }
    };
}).provider("gearCopyButton", function() {
    this.$get = function() {
        return {
            getTarget: function() {
                return this.target;
            },
            resetTarget: function() {
                this.target = void 0, this.changed && this.changed();
            },
            targetChanged: function(a) {
                this.changed = a;
            },
            setTarget: function(a, b) {
                this.target = a, this.changed && this.changed(b);
            },
            timeout: void 0
        };
    };
}).provider("gearSkeleton", function() {
    this.$get = function() {
        return {};
    };
}).directive("gearSkeleton", function() {
    return {
        restrict: "E",
        scope: {},
        controller: function(a, b, c) {}
    };
}).directive("gearLogin", function(a, b, c, d, e) {
    return {
        restrict: "E",
        link: function(f, g, h, i, j) {
            var k, l = g.parent();
            f.login = function() {
                return k = !0, e(function(a) {
                    c.addClass(g, "turn-toolbar").then(function() {
                        k && c.leave(g).then(function() {
                            a();
                        });
                    }), g.children().removeClass("gear-show");
                });
            }, f.logout = function() {
                return k = !1, e(function(a) {
                    c.enter(g, l).then(function() {
                        k || (g.children().addClass("gear-show"), a());
                    }), d(function() {
                        k || (g.removeClass("turn-toolbar"), b(g.contents())(f));
                    });
                });
            }, a.login = f.login, a.logout = f.logout;
        }
    };
}).provider("gearLogin", function() {
    this.$get = function() {
        return {};
    };
}).directive("gearToolbar", function(a, b) {
    return {
        restrict: "E",
        scope: {},
        transclude: !0,
        template: '<button ng-click="toggleMenu()" class="gear-mt gear-btn gear-flat gear-dark-theme gear-icon gear-btn-main-menu"><div class="gear-menu-icon" ng-class="{\'back\': openMenu}"><div class="bar"></div><div class="bar"></div><div class="bar"></div></div></button>',
        link: function(c, d, e, f, g) {
            g(function(a, b) {
                d.append(a);
            }), c.openMenu = void 0, a.change(function(a, d) {
                c.openMenu = "left" === a ? d : !1, b(function() {
                    c.$digest();
                });
            }), c.toggleMenu = function() {
                a.left.toggle();
            };
        }
    };
}).directive("gearSidenav", function(a, b, c) {
    return {
        restrict: "E",
        require: "^gearSkeleton",
        scope: {
            gearSide: "@",
            gearOpen: "=?"
        },
        link: function(a, b, d, e) {
            c.set(a, a.gearSide), a.toggle = function() {
                a.gearOpen ? a.close() : a.open();
            }, a.open = function() {
                c.setOpen(a), a.gearOpen = !0, b.addClass("gear-open"), c.onchange && c.onchange(a.gearSide, a.gearOpen);
            }, a.close = function() {
                a.gearOpen = !1, b.removeClass("gear-open"), c.onchange && c.onchange(a.gearSide, a.gearOpen);
            };
        }
    };
}).provider("gearSidenav", function() {
    this.$get = function() {
        var a;
        return {
            set: function(a, b) {
                this[b || "left"] = a;
            },
            setOpen: function(b) {
                this.open && this.open.close(a), this.open = b;
            },
            closeOpen: function() {
                this.open && this.open.close(a);
            },
            change: function(a) {
                this.onchange = a;
            }
        };
    };
}).directive("gearSidenavBackground", function(a, b) {
    return {
        restrict: "E",
        require: "^gearSkeleton",
        scope: {},
        link: function(b, c, d) {
            c.bind("click", function() {
                a.open.close();
            });
        }
    };
}).directive("gearUserArea", function(a) {
    return {
        restrict: "E",
        scope: {
            gearPrimaryInfo: "=?",
            gearSecondaryInfo: "=?",
            gearBackgroundColor: "=?",
            gearOptions: "=?"
        },
        templateUrl: "template/user-area.html",
        link: function(b, c, d) {
            c.bind("click", function() {
                b.openMenu = !b.openMenu, b.$apply();
            }), angular.element(document).bind("mousedown focusin", function(d) {
                a(function() {
                    !angular.element(c).find(d.target).length && b.openMenu && (b.openMenu = !1, b.$apply());
                });
            });
        }
    };
}).directive("gearExpandRows", function() {
    return {
        restrict: "A",
        controller: function(a, b, c) {
            this.toggle = void 0, this.open = void 0, this.close = void 0;
        }
    };
}).directive("gearExpandRowsParent", function(a) {
    return {
        restrict: "A",
        require: "^gearExpandRows",
        transclude: !0,
        replace: !0,
        template: '<tr ng-class="{\'gear-active\':gearActive}"><td><button type="button" class="gear-mt gear-btn gear-icon gear-smlr gear-flat gear-switch" ng-click="switch()"><i class="material-icons">arrow_drop_down</i></button></td></tr>',
        scope: {
            gearActive: "=?"
        },
        link: function(a, b, c, d, e) {
            e(function(a, c) {
                b.append(a);
            }), a.$watch("gearActive", function(a) {
                a ? d.open() : d.close();
            }), a["switch"] = function() {
                a.gearActive = !a.gearActive;
            };
        }
    };
}).directive("gearExpandRowsChild", function(a) {
    return {
        restrict: "A",
        require: "^gearExpandRows",
        transclude: !0,
        replace: !0,
        scope: {},
        template: '<tr class="gear-expand" ng-show="gearShow"><td></td></tr>',
        link: function(b, c, d, e, f) {
            c.closest("table").find("thead:first tr:not(:has(.gear-expand-offset))").prepend('<th class="gear-expand-offset"/>'), 
            f(function(a, b) {
                c.append(a);
            }), c.find("> td:last").children().wrap('<div class="gear-content gear-slide" ng-show="gearShow"/>'), 
            b.gearShow = !1, e.open = function() {
                b.gearShow = !0;
            }, e.close = function() {
                b.gearShow = !1;
            }, e.toggle = function() {
                return b.gearShow = !b.gearShow, b.gearShow;
            }, a(c.contents())(b);
        }
    };
}).provider("gearSnack", function() {
    var a, b, c = 5e3;
    _bars = [], _defaults = {
        delay: 1e3,
        actionText: "Ok"
    }, this.getDelay = function() {
        return c;
    }, this.setDelay = function(a) {
        c = a;
    }, this.$get = function() {
        return {
            show: function(b) {
                a && a(b);
            },
            hide: function() {
                b && b();
            },
            onHide: function(a) {
                b = a;
            },
            newAdded: function(b) {
                a = b;
            },
            getDefaults: function() {
                return _defaults;
            }
        };
    };
}).directive("gearSnackContainer", function(a, b, c) {
    return {
        restrict: "E",
        templateUrl: "template/snack-container.html",
        link: function(b, d, e) {
            function f() {
                b.bars.shift(), b.bars.length && g();
            }
            function g() {
                b.bars.length && b.bars[0].delay && (h = c(f, b.bars[0].delay));
            }
            var h;
            b.activeBar, b.bars = [], a.newAdded(function(c) {
                var c = angular.extend({}, a.getDefaults(), c);
                b.bars.push(c), 1 == b.bars.length && g();
            }), a.onHide(function() {
                h && c.cancel(h), f();
            });
        }
    };
}).directive("gearSnackBar", function(a) {
    return {
        restrict: "E",
        templateUrl: "template/snack-bar.html",
        scope: {
            gearBar: "="
        },
        link: function(a, b, c) {}
    };
}).directive("gearTimePicker", function(a) {
    return {
        restrict: "E",
        require: "ngModel",
        scope: {
            ngModel: "=",
            dateSelected: "=?",
            gearSelectHour: "&?",
            gearSelectMinute: "&?",
            gearError: "=?",
            gearErrorMessage: "=?",
            activeSelecion: "=?"
        },
        templateUrl: "template/time-picker.html",
        link: function(b, c, d, e) {
            function f(a, c) {
                var d, e, f, g;
                return d = b.actualRotate, e = "hours" == c ? 30 * (a >= 12 ? a - 12 : a) : 6 * a, 
                g = d, g = g >= 360 ? g - 360 * Math.floor(g / 360) : -360 >= g ? g + 360 * Math.floor(Math.abs(g) / 360) : g, 
                f = -180 > e - g ? 360 - g + e : e - g > 180 ? -(360 - e + g) : e - g, 180 == Math.abs(f) && (f = e > g ? Math.abs(f) : -f), 
                d += f;
            }
            function g(a) {
                return "[object Date]" !== Object.prototype.toString.call(a) || "boolean" == typeof a ? !1 : !isNaN(a.getTime());
            }
            b.hourType = 24, b.activeSelection = b.activeSelection ? b.activeSelection : "hours", 
            b.ngModel = b.ngModel ? new Date(b.ngModel) : "", e.$parsers.push(function(a) {
                return a = g(a) ? new Date(a) : "", b.date = a ? a : "", g(a) && (b.actualRotate = f("hours" == b.activeSelection ? a.getHours() : a.getMinutes(), b.activeSelection)), 
                a;
            }), e.$formatters.push(function(a) {
                return a = g(a) ? new Date(a) : "", b.date = a ? a : "", g(a) && (b.actualRotate = f("hours" == b.activeSelection ? a.getHours() : a.getMinutes(), b.activeSelection)), 
                a;
            }), g(b.ngModel) || (b.ngModel = ""), b.activeHours = function() {
                b.activeSelection = "hours", b.ngModel && (b.actualRotate = f(b.ngModel.getHours(), "hours"));
            }, b.activeMinutes = function() {
                b.activeSelection = "minutes", b.actualRotate = f(b.ngModel.getMinutes(), "minutes");
            }, b.getHoursList = function() {
                var a = [];
                if (24 == b.hourType) for (i = 0; i < 12; i++) 11 != i ? a.push(i + 13) : a.push(0);
                for (i = 0; i < 12; i++) a.push(i + 1);
                return a;
            }, b.getMinutesList = function() {
                var a = [];
                for (i = 0; i < 60; i += 5) a.push(i);
                return a;
            }, b.isSelectedHour = function(a) {
                return b.ngModel && b.ngModel.getHours() === a;
            }, b.isSelectedMinute = function(a) {
                return b.ngModel && b.ngModel.getMinutes() === a;
            }, b.selectHour = function(c, d) {
                b.date || (b.date = new Date(), b.date.setHours(0, 0, 0, 0), b.gearErrorMessage = ""), 
                b.date.setHours(c), b.ngModel = b.date, b.actualRotate = f(c, "hours"), d && (b.activeMinutes(), 
                a(function() {
                    b.focusMinute(), b.gearSelectHour && b.gearSelectHour();
                }));
            }, b.focusHour = function() {
                c.find(".selected-hour").focus(), b.activeSelection = "hours";
            }, b.changeHour = function(a) {
                var c;
                switch (a.which) {
                  case 38:
                    c = b.date.getHours() + 1, b.selectHour(24 == c ? 0 : c), a.preventDefault();
                    break;

                  case 39:
                    b.focusMinute(), a.preventDefault();
                    break;

                  case 40:
                    c = b.date.getHours() - 1, b.selectHour(-1 == c ? 23 : c), a.preventDefault();
                }
            }, b.selectMinute = function(c, d) {
                b.date || (b.date = new Date(), b.date.setHours(0, 0, 0, 0)), b.date.setMinutes(c), 
                b.ngModel = b.date, b.actualRotate = f(c, "minutes"), d && a(function() {
                    b.gearSelectMinute && b.gearSelectMinute();
                });
            }, b.focusMinute = function() {
                c.find(".selected-minute").focus(), b.activeSelection = "minutes";
            }, b.changeMinute = function(a) {
                var c;
                switch (a.which) {
                  case 37:
                    b.focusHour(), a.preventDefault();
                    break;

                  case 38:
                    c = b.date.getMinutes() + 1, b.selectMinute(60 == c ? 0 : c), a.preventDefault();
                    break;

                  case 40:
                    c = b.date.getMinutes() - 1, b.selectMinute(-1 == c ? 59 : c), a.preventDefault();
                }
            }, b.actualRotate = 0, b.ngModel && (b.actualRotate = f(b.ngModel.getHours(), "hours")), 
            b.selectedHourTop = function(a) {
                return a > 0 && 13 > a && 24 == b.hourType ? "42px" : "";
            }, b.isHourInside = function(a) {
                return a > 0 && 13 > a && 24 == b.hourType;
            };
        }
    };
}).directive("gearTimePickerGroup", function(a, b) {
    return {
        restrict: "E",
        require: [ "^form", "ngModel" ],
        scope: {
            ngModel: "=",
            gearId: "@",
            gearLabel: "@",
            gearFormat: "@",
            gearName: "@",
            gearShow: "=?",
            gearErrorMessage: "=?",
            gearMin: "=?",
            gearMax: "=?"
        },
        templateUrl: "template/time-picker-group.html",
        replace: !0,
        link: function(c, d, e, f) {
            function g(a) {
                return "[object Date]" !== Object.prototype.toString.call(a) || "boolean" == typeof a ? !1 : !isNaN(a.getTime());
            }
            "autocomplete" in e && d.find("input:first").attr("autocomplete", e.autocomplete), 
            c.required = "required" in e, c.isInvalid = function() {
                return c.picker.invalid && c.input.$dirty;
            }, c.input = f[0][c.gearName], c.gearFormat = c.gearFormat || "HH:mm", c.picker = {
                model: c.ngModel
            }, c.openPicker = function() {
                c.gearShow || (c.gearShow = !0);
            }, c.closePicker = function() {
                c.gearShow = !1, c.picker.text = a("date")(c.ngModel, c.gearFormat);
            }, c.$watch("picker.text", function(a, b) {
                c.picker.invalid ? c.picker.model = !1 : a != b && (a = a.split(":"), c.picker.model = new Date(), 
                c.picker.model.setHours(a[0]), c.picker.model.setMinutes(a[1]));
            }), c.$watch("picker.model", function(a) {
                c.ngModel = c.picker.model;
            }), f[1].$parsers.push(function(b) {
                return c.picker.invalid || (c.picker.text = a("date")(b, c.gearFormat)), b;
            }), f[1].$formatters.push(function(b) {
                return b = b || 0 == b ? b : "", c.picker.text = g(b) ? a("date")(b, c.gearFormat) : "", 
                b;
            }), d.find("input").bind("focus", function() {
                c.openPicker(), c.$digest();
            }), angular.element(document).bind("mousedown focusin", function(a) {
                b(function() {
                    !angular.element(d).find(a.target).length && c.gearShow && (c.gearShow = !1, c.$apply());
                });
            });
        }
    };
}).directive("gearMainMenu", function() {
    return {
        restrict: "E",
        replace: !0,
        scope: {
            gearList: "=",
            gearType: "@",
            gearOrder: "@",
            gearMainProp: "@",
            gearPrimInfo: "@",
            gearEmptyMessage: "@",
            gearReturnList: "=?",
            gearFavList: "=?",
            gearOnFavorite: "=?",
            gearOnSelect: "=?"
        },
        templateUrl: "template/main-menu.html",
        controller: function(a) {
            a.gearType = a.gearType ? a.gearType : "tree", this.favorite = function(b) {
                a.gearOnFavorite ? a.gearOnFavorite(b, !0) : b.favorite = !0;
            }, this.unfavorite = function(b) {
                a.gearOnFavorite ? a.gearOnFavorite(b, !1) : b.favorite = !1;
            };
        }
    };
}).directive("gearMainMenuList", function() {
    return {
        restrict: "E",
        replace: !0,
        scope: {
            gearList: "=",
            gearType: "=?",
            gearOrder: "=?",
            gearMainProp: "=?",
            gearPrimInfo: "=?",
            gearEmptyMessage: "=?",
            gearReturnList: "=?",
            gearFavList: "=?",
            gearOnSelect: "=?"
        },
        templateUrl: "template/main-menu-list.html",
        link: function(a, b, c) {
            a.filteredList = [], "history" == a.gearType && a.$watch("gearFavList", function(b) {
                for (var c = a.gearList, d = 0; d < c.length; d++) if (b) {
                    var e = b.some(function(a) {
                        return a.id === c[d].id;
                    });
                    c[d].favorite = !!e;
                } else c[d].favorite = !1;
            }), a.$watch("filteredList", function(b) {
                a.gearReturnList = b;
            }, !0);
        }
    };
}).directive("gearMainMenuItem", function(a) {
    return {
        restrict: "E",
        replace: !0,
        require: "^gearMainMenu",
        scope: {
            gearItem: "=",
            gearType: "=?",
            gearMainProp: "=?",
            gearPrimInfo: "=?",
            gearOnSelect: "=?"
        },
        templateUrl: "template/main-menu-item.html",
        link: function(b, c, d, e) {
            b.gearItem && b.gearItem.list ? (c.append('<gear-main-menu-list class="gear-slide" gear-list="gearItem.list" gear-type="gearType" ng-hide="!isOpen" gear-on-select="gearOnSelect" style="transition-duration: 200ms"></gear-main-menu-list>'), 
            c.find("a").attr("ng-click", "toggleSubMenu()"), a(c.contents())(b), b.isOpen = !1, 
            b.toggleSubMenu = function() {
                b.isOpen = !b.isOpen;
            }) : (b.toggleFavorite = function(a) {
                a.favorite ? e.unfavorite(a) : e.favorite(a);
            }, b.removeFavorite = function(a) {
                e.unfavorite(a);
            }), b.itemClick = function() {
                b.gearItem && b.gearItem.list ? b.toggleSubMenu() : b.gearOnSelect && b.gearOnSelect();
            }, b.checkItemTitle = function() {
                var a = c.find(".gear-item-name")[0];
                b.itemTitle = a.offsetWidth < a.scrollWidth ? b.gearItem.name : "";
            };
        }
    };
}).filter("gearMainMenu", function(a) {
    return function(b, c, d) {
        function e(a) {
            for (var b = 0; b < a.length; b++) a[b][d] ? i.push(a[b]) : a[b].list && e(a[b].list);
        }
        function f(b) {
            for (var c = 0; c < b.length; c++) b[c][d] ? j.push(b[c]) : b[c].list && f(b[c].list);
            j = a("orderBy")(j, d);
        }
        function g(b) {
            var c, e, f, g = new Date();
            g.setHours(0, 0, 0, 0), f = new Date(g.getFullYear(), g.getMonth(), g.getDate() - 1), 
            b = a("orderBy")(b, d, !0);
            for (var h = 0; h < b.length; h++) {
                var i = angular.copy(b[h]), j = angular.copy(i[d]);
                if (j.setHours(0, 0, 0, 0), !c || c.getTime() != j.getTime()) {
                    c = j;
                    var l = [ "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" ];
                    weekDays = [ "Domingo", "Segunda-feira", "Terça-feira", "Quarta-feira", "Quinta-feira", "Sexta-feira", "Sábado" ], 
                    sevenDaysInMil = 6048e5, e = c.getDate() + " de " + l[c.getMonth()].toLowerCase() + " de " + c.getFullYear(), 
                    g.getTime() === c.getTime() ? e = "Hoje" : f.getTime() === c.getTime() ? e = "Ontem" : g.getTime() - sevenDaysInMil <= c.getTime() && (e = weekDays[c.getDay()]), 
                    b[h].gearLabel = e;
                }
                i[d] = a("date")(i[d], "HH:mm"), k.push(b[h]);
            }
        }
        var h, i = [], j = [], k = [];
        switch (c) {
          case "favorites":
            e(b), h = i;
            break;

          case "top10":
            f(b), h = j;
            break;

          case "history":
            g(b), h = k;
            break;

          default:
            h = a("orderBy")(b, d);
        }
        return h;
    };
}).provider("gearColor", function() {
    var a = {
        red: {
            50: "#FFEBEE",
            100: "#FFCDD2",
            200: "#EF9A9A",
            300: "#E57373",
            400: "#EF5350",
            500: "#F44336",
            600: "#E53935",
            700: "#D32F2F",
            800: "#C62828",
            900: "#B71C1C",
            A100: "#FF8A80",
            A200: "#FF5252",
            A400: "#FF1744",
            A700: "#D50000"
        },
        pink: {
            50: "#FCE4EC",
            100: "#F8BBD0",
            200: "#F48FB1",
            300: "#F06292",
            400: "#EC407A",
            500: "#E91E63",
            600: "#D81B60",
            700: "#C2185B",
            800: "#AD1457",
            900: "#880E4F",
            A100: "#FF80AB",
            A200: "#FF4081",
            A400: "#F50057",
            A700: "#C51162"
        },
        purple: {
            50: "#F3E5F5",
            100: "#E1BEE7",
            200: "#CE93D8",
            300: "#BA68C8",
            400: "#AB47BC",
            500: "#9C27B0",
            600: "#8E24AA",
            700: "#7B1FA2",
            800: "#6A1B9A",
            900: "#4A148C",
            A100: "#EA80FC",
            A200: "#E040FB",
            A400: "#D500F9",
            A700: "#AA00FF"
        },
        deepPurple: {
            50: "#EDE7F6",
            100: "#D1C4E9",
            200: "#B39DDB",
            300: "#9575CD",
            400: "#7E57C2",
            500: "#673AB7",
            600: "#5E35B1",
            700: "#512DA8",
            800: "#4527A0",
            900: "#311B92",
            A100: "#B388FF",
            A200: "#7C4DFF",
            A400: "#651FFF",
            A700: "#6200EA"
        },
        indigo: {
            50: "#E8EAF6",
            100: "#C5CAE9",
            200: "#9FA8DA",
            300: "#7986CB",
            400: "#5C6BC0",
            500: "#3F51B5",
            600: "#3949AB",
            700: "#303F9F",
            800: "#283593",
            900: "#1A237E",
            A100: "#8C9EFF",
            A200: "#536DFE",
            A400: "#3D5AFE",
            A700: "#304FFE"
        },
        blue: {
            50: "#E3F2FD",
            100: "#BBDEFB",
            200: "#90CAF9",
            300: "#64B5F6",
            400: "#42A5F5",
            500: "#2196F3",
            600: "#1E88E5",
            700: "#1976D2",
            800: "#1565C0",
            900: "#0D47A1",
            A100: "#82B1FF",
            A200: "#448AFF",
            A400: "#2979FF",
            A700: "#2962FF"
        },
        lightBlue: {
            50: "#E1F5FE",
            100: "#B3E5FC",
            200: "#81D4FA",
            300: "#4FC3F7",
            400: "#29B6F6",
            500: "#03A9F4",
            600: "#039BE5",
            700: "#0288D1",
            800: "#0277BD",
            900: "#01579B",
            A100: "#80D8FF",
            A200: "#40C4FF",
            A400: "#00B0FF",
            A700: "#0091EA"
        },
        cyan: {
            50: "#E0F7FA",
            100: "#B2EBF2",
            200: "#80DEEA",
            300: "#4DD0E1",
            400: "#26C6DA",
            500: "#00BCD4",
            600: "#00ACC1",
            700: "#0097A7",
            800: "#00838F",
            900: "#006064",
            A100: "#84FFFF",
            A200: "#18FFFF",
            A400: "#00E5FF",
            A700: "#00B8D4"
        },
        teal: {
            50: "#E0F2F1",
            100: "#B2DFDB",
            200: "#80CBC4",
            300: "#4DB6AC",
            400: "#26A69A",
            500: "#009688",
            600: "#00897B",
            700: "#00796B",
            800: "#00695C",
            900: "#004D40",
            A100: "#A7FFEB",
            A200: "#64FFDA",
            A400: "#1DE9B6",
            A700: "#00BFA5"
        },
        green: {
            50: "#E8F5E9",
            100: "#C8E6C9",
            200: "#A5D6A7",
            300: "#81C784",
            400: "#66BB6A",
            500: "#4CAF50",
            600: "#43A047",
            700: "#388E3C",
            800: "#2E7D32",
            900: "#1B5E20",
            A100: "#B9F6CA",
            A200: "#69F0AE",
            A400: "#00E676",
            A700: "#00C853"
        },
        lightGreen: {
            50: "#F1F8E9",
            100: "#DCEDC8",
            200: "#C5E1A5",
            300: "#AED581",
            400: "#9CCC65",
            500: "#8BC34A",
            600: "#7CB342",
            700: "#689F38",
            800: "#558B2F",
            900: "#33691E",
            A100: "#CCFF90",
            A200: "#B2FF59",
            A400: "#76FF03",
            A700: "#64DD17"
        },
        lime: {
            50: "#F9FBE7",
            100: "#F0F4C3",
            200: "#E6EE9C",
            300: "#DCE775",
            400: "#D4E157",
            500: "#CDDC39",
            600: "#C0CA33",
            700: "#AFB42B",
            800: "#9E9D24",
            900: "#827717",
            A100: "#F4FF81",
            A200: "#EEFF41",
            A400: "#C6FF00",
            A700: "#AEEA00"
        },
        yellow: {
            50: "#FFFDE7",
            100: "#FFF9C4",
            200: "#FFF59D",
            300: "#FFF176",
            400: "#FFEE58",
            500: "#FFEB3B",
            600: "#FDD835",
            700: "#FBC02D",
            800: "#F9A825",
            900: "#F57F17",
            A100: "#FFFF8D",
            A200: "#FFFF00",
            A400: "#FFEA00",
            A700: "#FFD600"
        },
        amber: {
            50: "#FFF8E1",
            100: "#FFECB3",
            200: "#FFE082",
            300: "#FFD54F",
            400: "#FFCA28",
            500: "#FFC107",
            600: "#FFB300",
            700: "#FFA000",
            800: "#FF8F00",
            900: "#FF6F00",
            A100: "#FFE57F",
            A200: "#FFD740",
            A400: "#FFC400",
            A700: "#FFAB00"
        },
        orange: {
            50: "#FFF3E0",
            100: "#FFE0B2",
            200: "#FFCC80",
            300: "#FFB74D",
            400: "#FFA726",
            500: "#FF9800",
            600: "#FB8C00",
            700: "#F57C00",
            800: "#EF6C00",
            900: "#E65100",
            A100: "#FFD180",
            A200: "#FFAB40",
            A400: "#FF9100",
            A700: "#FF6D00"
        },
        deepOrange: {
            50: "#FBE9E7",
            100: "#FFCCBC",
            200: "#FFAB91",
            300: "#FF8A65",
            400: "#FF7043",
            500: "#FF5722",
            600: "#F4511E",
            700: "#E64A19",
            800: "#D84315",
            900: "#BF360C",
            A100: "#FF9E80",
            A200: "#FF6E40",
            A400: "#FF3D00",
            A700: "#DD2C00"
        },
        brown: {
            50: "#EFEBE9",
            100: "#D7CCC8",
            200: "#BCAAA4",
            300: "#A1887F",
            400: "#8D6E63",
            500: "#795548",
            600: "#6D4C41",
            700: "#5D4037",
            800: "#4E342E",
            900: "#3E2723"
        },
        grey: {
            50: "#FAFAFA",
            100: "#F5F5F5",
            200: "#EEEEEE",
            300: "#E0E0E0",
            400: "#BDBDBD",
            500: "#9E9E9E",
            600: "#757575",
            700: "#616161",
            800: "#424242",
            900: "#212121"
        },
        blueGrey: {
            50: "#ECEFF1",
            100: "#CFD8DC",
            200: "#B0BEC5",
            300: "#90A4AE",
            400: "#78909C",
            500: "#607D8B",
            600: "#546E7A",
            700: "#455A64",
            800: "#37474F",
            900: "#263238"
        },
        black: "#000000",
        white: "#FFFFFF"
    };
    this.$get = function() {
        return {
            material: a
        };
    };
}).filter("gearCpf", function() {
    return function(a) {
        return a ? (a = a.toString().replace(/[^0-9]+/g, ""), a.length > 3 && (a = a.substring(0, 3) + "." + a.substring(3)), 
        a.length > 7 && (a = a.substring(0, 7) + "." + a.substring(7)), a.length > 11 && (a = a.substring(0, 11) + "-" + a.substring(11)), 
        a.length > 14 && (a = a.substring(0, 14)), a) : void 0;
    };
}).filter("gearCnpj", function() {
    return function(a) {
        return a ? (a = a.toString().replace(/[^0-9]+/g, ""), a.length > 2 && (a = a.substring(0, 2) + "." + a.substring(2)), 
        a.length > 6 && (a = a.substring(0, 6) + "." + a.substring(6)), a.length > 10 && (a = a.substring(0, 10) + "/" + a.substring(10)), 
        a.length > 15 && (a = a.substring(0, 15) + "-" + a.substring(15)), a.length > 18 && (a = a.substring(0, 18)), 
        a) : void 0;
    };
}).filter("gearPhone", function() {
    return function(a) {
        return a ? (a = a.toString().replace(/[^0-9]+/g, ""), a.length > 0 && (a = a.substring(0, 0) + "(" + a.substring(0)), 
        a.length > 3 && (a = a.substring(0, 3) + ") " + a.substring(3)), a.length > 9 && (a = a.length < 14 ? a.substring(0, 9) + "-" + a.substring(9) : a.substring(0, 10) + "-" + a.substring(10)), 
        a.length > 15 && (a = a.substring(0, 15)), a) : void 0;
    };
}).filter("gearCep", function() {
    return function(a) {
        return a ? (a = a.toString().replace(/[^0-9]+/g, ""), a.length > 5 && (a = a.substring(0, 5) + "-" + a.substring(5)), 
        a) : void 0;
    };
}).filter("gearMoney", function() {
    return function(a, b, c, d, e) {
        if (isNaN(a)) return NaN;
        if (e = void 0 === e ? 2 : e, d = d || ".", c = c || ",", a = a.toString(), splitted = a.split("."), 
        intValue = splitted[0], decimalValue = splitted[1] ? splitted[1].toString() : "", 
        decimalValue.length < e) for (i = decimalValue.length; i < e; i++) decimalValue += "0"; else decimalValue = decimalValue.slice(0, e);
        var f = 0, g = intValue.length;
        for (i = 3; i < g; i += 3) intValue = intValue.slice(0, -(i + f)) + d + intValue.slice(-(i + f)), 
        f++;
        return a = intValue + c + decimalValue, a = b ? b + " " + a : a;
    };
}).animation(".gear-slide", [ "$animateCss", function(a) {
    function b(a) {
        var b = a[0].getAttribute("gear-slide-toggle");
        return b || (b = ++e, a[0].setAttribute("gear-slide-toggle", b)), b;
    }
    function c(a) {
        var b = f[a];
        return b || (b = {}, f[a] = b), b;
    }
    function d(a, b, c, d, e) {
        return function() {
            b.animating = !0, b.animator = c, b.doneFn = e, c.start()["finally"](function() {
                b.doneFn === e && (d[0].style.height = "", d[0].style.paddingTop = "", d[0].style.paddingBottom = "", 
                d[0].style.overflow = ""), b.animating = !1, b.animator = void 0, b.doneFn();
            });
        };
    }
    var e = 0, f = {};
    return {
        addClass: function(e, f, g) {
            if ("ng-hide" == f) {
                var h = c(b(e)), i = h.animating && h.height ? h.height : e[0].offsetHeight, j = h.animating && h.paddingTop ? h.paddingTop : parseInt(e.css("padding-top")), k = h.animating && h.paddingBottom ? h.paddingBottom : parseInt(e.css("padding-bottom")), l = a(e, {
                    from: {
                        height: i + "px",
                        paddingTop: j + "px",
                        paddingBottom: k + "px",
                        overflow: "hidden"
                    },
                    to: {
                        height: "0px",
                        paddingTop: "0px",
                        paddingBottom: "0px"
                    }
                });
                if (l) return h.animating ? (h.doneFn = d(!0, h, l, e, g), h.animator.end()) : (h.height = i, 
                h.paddingTop = j, h.paddingBottom = k, d(!0, h, l, e, g)());
            }
            g();
        },
        removeClass: function(e, f, g) {
            if ("ng-hide" == f) {
                var h = c(b(e)), i = h.animating && h.height ? h.height : e[0].offsetHeight, j = h.animating && h.paddingTop ? h.paddingTop : parseInt(e.css("padding-top")), k = h.animating && h.paddingBottom ? h.paddingBottom : parseInt(e.css("padding-bottom")), l = a(e, {
                    from: {
                        height: "0px",
                        paddingTop: "0px",
                        paddingBottom: "0px",
                        overflow: "hidden"
                    },
                    to: {
                        height: i + "px",
                        paddingTop: j + "px",
                        paddingBottom: k + "px"
                    }
                });
                if (l) return h.animating ? (h.doneFn = d(!1, h, l, e, g), h.animator.end()) : (h.height = i, 
                h.paddingTop = j, h.paddingBottom = k, d(!1, h, l, e, g)());
            }
            g();
        }
    };
} ]), angular.module("gearUi").run([ "$templateCache", function(a) {
    "use strict";
    a.put("gear-templates/color-picker-group.html", "<div class=gear-form-group><div class=\"gear-icon left\" ng-style=\"{'width': gearShape == 'round-rectangle' && 'auto'}\"><div class=\"switch-color-preview gear-mt gear-color{{gearShape && ' ' + gearShape}}\" ng-class=\"{'no-color': !colorSelected}\" ng-style=\"{'background-color': colorSelected ? colorSelected : '#D01716'}\" data-color-range=300></div></div><input id={{gearId}} ng-class=gearClass name={{gearName}} ng-readonly=switchOpened ng-pattern=/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/ class=\"gear-form-control txt-color-switch gear-not-empty\" ng-model=ngModel ng-focus=switchOpen() autocomplete=off ng-style=\"{'color': gearShape == 'round-rectangle' && 'transparent', 'font-size': gearShape == 'round-rectangle' && '0px'}\"><label for={{gearId}}>Cor</label><gear-form-transclude></gear-form-transclude><div class=switch-color ng-if=switchOpened><div class=no-color ng-click=setColorType(null)></div><div ng-repeat=\"colorType in colorTypes\" class=\"gear-mt gear-color\" ng-class=colorClass(colorType) ng-click=\"setColorType($event, colorType)\" ng-dblclick=selectColor($event)></div><div class=switch-var ng-class=\"{'gear-show':colorTypeSelected}\" ng-style=\"{'top': switchVarTop}\" style=\"top: -47px\"><div class=\"gear-mt gear-color{{colorTypeSelected != null ? ' ' + colorTypeSelected : ''}}\" ng-repeat=\"colorVariation in colorVariations\" ng-class=\"{'gear-show':checkAccentColor(colorVariation)}\" data-color-range={{colorVariation}} ng-click=selectColor($event)></div><div class=arrow ng-style=\"{'margin-left': switchVarArrowLeft}\" style=\"margin-left: 57px\"></div></div></div></div>"), 
    a.put("gear-templates/date-picker-group.html", '<div class=gear-form-group><input id={{gearId}} class=gear-form-control ng-class="{\'gear-error\': input.$dirty && input.$error.required || input.$error.gearError}" ng-model=picker.text ng-focus=openPicker() gear-form-control gear-mask-date gear-format-date=picker.model gear-min=gearMin gear-max=gearMax gear-format-error=picker.invalid name={{gearName}} ng-required=required><label for={{gearId}} class=gear-form-floating-label>{{gearLabel}}</label><div class=gear-message ng-if="input.$dirty && input.$error.required || input.$error.gearError"><span ng-if="input.$dirty && input.$error.required">Campo obrigatório</span> <span ng-if="input.$error.gearError && !input.$error.required">{{picker.invalid.message}}</span></div><gear-date-picker ng-model=picker.model gear-select=closePicker() gear-error="input.$dirty && input.$error.required || input.$error.gearError" gear-error-message=picker.invalid.message gear-min=gearMin gear-max=gearMax ng-class="{\'gear-error\': input.$dirty && input.$error.required || input.$error.gearError}" ng-if=gearShow></gear-date-picker></div>'), 
    a.put("gear-templates/date-picker.html", '<div class=header><div class=error-message ng-if="gearError || !ngModel">{{gearErrorMessage || \'Selecione uma data\'}}</div><div class=date-info ng-if=!gearError><div class=year ng-if=selectedYear()>{{selectedYear()}}</div><div class=date><span ng-click=goToSelected()>{{selectedDate()}}</span></div></div></div><div class=body><div class=calendar><div class=month-control tabindex=0 ng-keydown=monthControl($event)><div class=last-month><button type=button class="gear-mt gear-btn gear-smlr gear-flat gear-icon" ng-click=goPrev() tabindex=-1><i class=material-icons>navigate_before</i></button></div><div class=month-label>{{getViewCalendar()}}</div><div class=next-month><button type=button class="gear-mt gear-btn gear-smlr gear-flat gear-icon" ng-click=goNext() tabindex=-1><i class=material-icons>navigate_next</i></button></div></div><div class=week-label><div ng-repeat="dayLabel in weekDays track by $index">{{dayLabel.substring(0,1)}}</div></div><div class=month-weeks><div class=week ng-repeat="week in weeks"><div class=day ng-class="{\'current-month\': day.getMonth() == activeMonth.getMonth(), \'last-month\': day.getFullYear() < activeMonth.getFullYear() || (day.getMonth() < activeMonth.getMonth() && day.getFullYear() == activeMonth.getFullYear()), \'next-month\': day.getFullYear() > activeMonth.getFullYear() ||  (day.getMonth() > activeMonth.getMonth() && day.getFullYear() == activeMonth.getFullYear())}" ng-repeat="day in week track by $index"><button type=button ng-class="{\'today\': isToday(day), \'selected\': isSelectedDay(day)}" class=day-button ng-click=selectDay(day) ng-if="day.getMonth() == activeMonth.getMonth()" ng-keydown=dayControl($event) ng-disabled=invalidDate(day) tabindex=-1>{{day.getDate()}}</button></div></div></div></div></div>'), 
    a.put("gear-templates/main-menu-item.html", "<li ng-class=\"{'submenu': gearItem.list && gearItem.list.length, 'gear-active': isOpen, 'with-label': gearItem.gearLabel}\"><div class=\"group-label his-date\" ng-if=gearItem.gearLabel>{{gearItem.gearLabel}}</div><button title=\"Adicionar favorito\" class=\"gear-mt gear-btn gear-flat gear-icon gear-fav gear-smlr\" ng-class=\"{'gear-fav-add': gearItem.favorite, 'right': gearType == 'top10' || gearType == 'history'}\" ng-if=\"(!gearItem.list || (gearItem.list && !gearItem.list.length)) && (gearType == 'tree' || gearType == 'top10' || (gearType == 'history' && gearItem.gearType != 'label') || !gearType)\" ng-click=toggleFavorite(gearItem)><i class=material-icons>{{gearItem.favorite ? 'star' : 'star_border'}}</i></button> <span ng-if=\"gearItem.gearType && gearItem.gearType == 'label'\">{{gearItem.name}}</span> <a ng-href={{gearItem.link}} ng-click=itemClick() ng-if=!gearItem.gearType><div ng-if=gearPrimInfo class=menu-prim-info ng-class=\"{'his-hour': gearType == 'history'}\" ng-attr-title=\"{{gearType == 'history' ? (gearPrimInfo | date:'dd/MM/yyyy HH:mm') : ''}}\">{{gearType == 'history' ? (gearPrimInfo | date:'HH:mm') : gearPrimInfo}}</div><div class=gear-item-name ng-attr-title={{itemTitle}} ng-mouseover=checkItemTitle()>{{gearItem.name}}</div></a> <button title=\"Remover favorito\" class=\"gear-mt gear-btn gear-flat gear-icon gear-smlr gear-danger gear-delete\" ng-if=\"(!gearItem.list || (gearItem.list && !gearItem.list.length)) && (gearType == 'favorites')\" ng-click=removeFavorite(gearItem)><i class=material-icons>delete</i></button></li>"), 
    a.put("gear-templates/main-menu-list.html", "<ul><li style=\"padding: 6px 10px\" ng-if=!filteredList.length>{{gearEmptyMessage || 'Nenhum item encontrado'}}</li><gear-main-menu-item ng-repeat=\"item in filteredList = (gearList | gearMainMenu:gearType:gearMainProp | orderBy:gearOrder:(gearType == 'history'))\" gear-item=item class=menu-prim-info gear-type=gearType gear-prim-info=\"gearType == 'top10' ? $index + 1 : item[gearPrimInfo]\" gear-on-select=gearOnSelect></gear-main-menu-item></ul>"), 
    a.put("gear-templates/main-menu.html", '<div class="gear-menu-list {{gearType}}"><gear-main-menu-list gear-list=gearList gear-type=gearType gear-order=gearOrder gear-main-prop=gearMainProp gear-prim-info=gearPrimInfo gear-empty-message=gearEmptyMessage gear-return-list=gearReturnList gear-fav-list=gearFavList gear-on-select=gearOnSelect></gear-main-menu-list></div>'), 
    a.put("gear-templates/snack-bar.html", '<div class=gear-snack-text>{{gearBar.text}}</div><button class="gear-mt gear-btn gear-flat gear-dark-theme" ng-style="{\'color\': gearBar.actionColor}" ng-click=gearBar.action() ng-if=gearBar.action>{{gearBar.actionText}}</button>'), 
    a.put("gear-templates/snack-container.html", '<gear-snack-bar ng-repeat="bar in bars" gear-bar=bar ng-if="$index == 0"></gear-snack-bar>'), 
    a.put("gear-templates/time-picker-group.html", '<div class=gear-form-group><input id={{gearId}} class=gear-form-control ng-class="{\'gear-error\': isInvalid() || input.$dirty && input.$error.required}" ng-model=picker.text ng-focus=openPicker() gear-form-control gear-mask-time gear-format-time=picker.model gear-format-error=picker.invalid name={{gearName}} ng-required=required><label for={{gearId}} class=gear-form-floating-label>{{gearLabel}}</label><div class=gear-message ng-if="input.$dirty && input.$error"><span ng-if="input.$dirty && input.$error.required">Campo obrigatório</span> <span ng-if="input.$dirty && input.$error.gearError && !input.$error.required">{{picker.invalid}}</span></div><gear-time-picker ng-model=picker.model gear-select-minute=closePicker() gear-error=isInvalid() gear-error-message=picker.invalid ng-class="{\'gear-error\': isInvalid() || input.$dirty && input.$error.required}" ng-if=gearShow></gear-time-picker></div>'), 
    a.put("gear-templates/time-picker.html", '<div class="header">\r\n	<div class="error-message" ng-if="gearError" style="font-size: 16px;">{{gearErrorMessage}}</div>\r\n	<div ng-if="!gearError && !date" style="font-size: 20px;">\r\n		Selecione uma hora\r\n	</div>\r\n	<div class="time-info" ng-if="!gearError && !!date">\r\n		<div class="time">\r\n			<div class="time-part selected-hour" ng-class="{\'active\': activeSelection == \'hours\'}" ng-focus="activeHours()" ng-keydown="changeHour($event)" tabindex="0">{{date.getHours() < 10 ? \'0\' + date.getHours() : date.getHours()}}</div>\r\n			<span>:</span>\r\n			<div class="time-part selected-minute" ng-class="{\'active\': activeSelection == \'minutes\'}" ng-focus="activeMinutes()" ng-keydown="changeMinute($event)" tabindex="0">{{date.getMinutes() < 10 ? \'0\' + date.getMinutes() : date.getMinutes()}}</div>\r\n		</div>\r\n	</div>\r\n</div>\r\n<div class="body">\r\n	<div class="clock {{activeSelection}}" ng-class="hourType == 12 ? \'hour-12\' : \'hour-24\'">\r\n		<div class="sel-cont" ng-style="{\'transform\': \'rotate(\' + actualRotate + \'deg)\', \'top\': (activeSelection == \'hours\' ? selectedHourTop(date.getHours()) : \'\')}" ng-if="!gearError && !!date">\r\n			<div class="sel-cont-ball" ng-class="{\'precise-minute\': date.getMinutes() % 5 != 0 && activeSelection == \'minutes\'}"></div>\r\n			<div class="sel-cont-stick"></div>\r\n		</div>\r\n		<div class="hours-wrap clock-inner-wrap" ng-click="focusHour()" ng-if="activeSelection == \'hours\' || !date">\r\n			<div ng-repeat="hour in getHoursList()" class="segment-cont" ng-style="{\'transform\': \'rotate(\' + (30 * (hour >= 12 ? hour - 12 : hour)) + \'deg)\'}">\r\n				<button type="button" class="hour" ng-click="selectHour(hour, $event)" ng-class="{\'selected\': isSelectedHour(hour)}" ng-style="{\'transform\': \'rotate(-\' + (30 * (hour >= 12 ? hour - 12 : hour)) + \'deg)\'}" ng-focus="focusHour()" tabindex="-1">{{hour || \'00\'}}</button>\r\n			</div>\r\n		</div>\r\n		<div class="minutes-wrap clock-inner-wrap" ng-click="focusMinute()" ng-if="activeSelection == \'minutes\' && date">\r\n			<div ng-repeat="minute in getMinutesList()" class="segment-cont" ng-style="{\'transform\': \'rotate(\' + (30 * ($index >= 12 ? $index - 12 : $index)) + \'deg)\'}">\r\n				<button type="button" class="minute" ng-click="selectMinute(minute, $event)" ng-class="{\'selected\': isSelectedMinute(minute)}" ng-style="{\'transform\': \'rotate(-\' + (30 * ($index >= 12 ? $index - 12 : $index)) + \'deg)\'}" ng-focus="focusMinute()" tabindex="-1">{{minute || \'00\'}}</button>\r\n			</div>\r\n		</div>\r\n	</div>\r\n</div>'), 
    a.put("gear-templates/user-area.html", '<div class=gear-user-name>{{gearPrimaryInfo}}<div class=cod-filial>{{gearSecondaryInfo}}</div></div><i class="material-icons down-arrow">arrow_drop_down</i><div class=gear-user-pic>{{gearPrimaryInfo.slice(0,1)}}</div><div class=gear-custom-select ng-class="{\'gear-open\': openMenu}"><ul ng-repeat="list in gearOptions"><li ng-repeat="option in list"><div id=option-fav class=gear-select-option ng-click="option.action && option.action()"><i class="material-icons gear-icon">{{option.icon}}</i> {{option.name}}</div></li></ul></div>');
} ]), function() {
    function a(a) {
        var b = [];
        for (void 0 != a && (b = "string" == typeof a ? document.querySelectorAll(a) : void 0 != a.length ? a : [ a ]), 
        this.params = a, this.selector = b, this.length = b.length, i = 0; i < this.length; i++) this[i] = b[i];
        return this;
    }
    function b(b) {
        return new a(b);
    }
    b.fn = a.prototype = {
        modal: function(a) {
            console.log("MODAL PIORRA");
        },
        tabs: function(a) {
            console.log("TABS UHU");
        },
        tooltip: function(a) {
            for (var b = $.extend({
                balloon: !1,
                background: !1,
                color: !1,
                preference: "top",
                destroy: !1,
                content: void 0,
                width: void 0,
                maxWidth: void 0
            }, a), c = this.length, d = -1; d++ < c - 1; ) b.destroy ? removeMessage(this[d]) : (this[d].classList.add("pop"), 
            b.balloon && this[d].setAttribute("data-gear-pop-message-balloon", ""), b.background && this[d].setAttribute("data-gear-pop-message-background", b.background), 
            b.color && this[d].setAttribute("data-gear-pop-message-color", b.color), b.content && this[d].setAttribute("data-gear-pop-message-content", b.content), 
            b.width && this[d].setAttribute("data-gear-pop-message-width", b.width), b.maxWidth && this[d].setAttribute("data-gear-pop-message-maxwidth", b.maxWidth), 
            this[d].setAttribute("data-gear-pop-message-pref", b.preference));
            return this;
        }
    }, b.version = "0.1", b.author = "Gelson Mariano Rodrigues", b.contact = "GelsonMRodrigues@hotmail.com", 
    b.info = "Gear UI\nv" + b.version + "\n" + b.author + "\n" + b.contact, b.randomChar = function(a) {
        var b = "", c = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        for (i = 0; i < a; i++) b += c.charAt(Math.floor(Math.random() * c.length));
        return b;
    }, b.button = function(a) {
        var b = $.extend({
            id: void 0,
            material: !0,
            type: void 0,
            flat: !1,
            raised: !1,
            willRaise: !0,
            text: "Button",
            click: void 0
        }, a);
        this.id = b.id, this.material = b.material, this.type = b.type, this.flat = b.flat, 
        this.willRaise = b.willRaise, this.raised = b.raised, this.text = b.text, this.click = b.click;
        var c = $("<button/>", {
            "class": "gear-btn",
            text: b.text
        });
        switch (this.type) {
          case "primary":
            c.addClass("gear-primary");
            break;

          case "danger":
            c.addClass("gear-danger");
            break;

          case "warning":
            c.addClass("gear-warning");
            break;

          case "success":
            c.addClass("gear-success");
        }
        return this.flat && c.addClass("gear-flat"), this.raised && c.addClass("gear-raised"), 
        this.willRaise && c.addClass("gear-will-raise"), this.material && c.addClass("gear-mt"), 
        this.click && c.click(function() {
            b.click();
        }), this[0] = c, c;
    }, b.dialog = function(a) {
        function b(a) {
            var b = $(a);
            return b.length ? b.is(".gear-dialog") ? b.is(".gear-open") ? void console.error("Dialog já está aberta!") : (0 === b.parent().length && (dialogWrap = $("<div/>", {
                "class": "gear-dialog-wrap"
            }), dialogWrap.click(function(b) {
                $(b.target).is(".gear-dialog-wrap") && c(a);
            }), dialogWrap.append(b), $(".gear-dialog-group").length || ($("ng-view").length ? $("ng-view").append($("<div/>", {
                "class": "gear-dialog-group"
            })) : $("body").append($("<div/>", {
                "class": "gear-dialog-group"
            }))), $(".gear-dialog-group").append(dialogWrap)), $(a).find(".gear-dialog-close").click(function() {
                c(f);
            }), $(".gear-dialog[data-gear-order]").each(function() {
                $(this).attr("data-gear-order", ~~$(this).attr("data-gear-order") + 1);
            }), $(".gear-dialog-wrap.gear-focus, .gear-dialog.gear-focus").removeClass("gear-focus"), 
            $("html").css("padding-right", window.innerWidth - $("html").width() + "px"), $("html").addClass("gear-dialog-open"), 
            void b.attr("data-gear-order", 1).parent().addBack().addClass("gear-open gear-focus")) : void console.error("Elemento não é uma Dialog!") : void console.error("Dialog não existe!");
        }
        function c(a, b) {
            var c = $(a);
            if (!c.length) return void console.error("Dialog não existe!");
            if (!c.is(".gear-dialog")) return void console.error("Elemento não é uma Dialog!");
            if (!c.is(".gear-open")) return void console.error("Dialog não está aberta!");
            for (dialogLen = $(".gear-dialog[data-gear-order].gear-open").length, i = c.attr("data-gear-order"); i <= dialogLen; i++) $(".gear-dialog[data-gear-order=" + i + "]").attr("data-gear-order", ~~$(".gear-dialog[data-gear-order=" + i + "]").attr("data-gear-order") - 1);
            c.removeAttr("data-gear-order").parent().addBack().removeClass("gear-open gear-focus"), 
            $(".gear-dialog.gear-open").length ? $('.gear-dialog[data-gear-order="1"]').parent().addBack().addClass("gear-focus") : $("html").removeClass("gear-dialog-open").css("padding-right", "0px"), 
            c.on("transitionend", function(a) {
                $(a.target).is(".gear-dialog") && (b || f.is(".gear-open") || c.parent().remove().end().remove());
            });
        }
        function d() {
            $("html").removeClass("gear-dialog-open").css("padding-right", "0px"), $(".gear-dialog").removeAttr("data-gear-order").parent().addBack().removeClass("gear-open gear-focus");
        }
        this.show = function() {
            b(f);
        }, this.hide = function(a) {
            var b = $.extend({
                all: !1,
                keepOnHTML: !1
            }, a);
            b.all ? d(b.keepOnHTML) : c(f, b.keepOnHTML);
        }, this.isOpen = function() {
            return $("html").is(".gear-dialog-open") && $(f).parent().is(".gear-open") && $(f).is(".gear-open") && $(f).parent().length ? !0 : !1;
        }, this.isFocus = function() {
            return $("html").is(".gear-dialog-open") && $(f).parent().is(".gear-open.gear-focus") && $(f).is(".gear-open.gear-focus") && $(f).parent().length ? !0 : !1;
        }, this.isRendered = function() {
            return $(f).parent().length ? !0 : !1;
        }, this.title = function(a) {
            return void 0 === a ? g[0] : void (a ? g.html(a) : g.html(""));
        }, this.content = function(a) {
            return void 0 === a ? h[0] : void (a ? h.html("").append(a) : h.html(""));
        }, this.buttons = function(a) {
            if (void 0 === a) return j[0];
            for (j.html(""), i = 0; i < a.length; i++) j.append(a[i]);
        }, this.width = function(a) {
            a ? f.css("width", a) : f.css("width", "auto");
        };
        var e = $.extend({
            material: !0,
            title: "Titulo",
            content: "",
            buttons: "",
            width: "450px",
            show: !1,
            storeIndex: !0,
            backgroundDismiss: !0
        }, a), f = $("<div/>", {
            "class": "gear-mt gear-dialog"
        }), g = $("<h2/>", {
            "class": "gear-dialog-title"
        }), h = $("<div/>", {
            "class": "gear-dialog-content"
        }), j = $("<div/>", {
            "class": "gear-button-container"
        });
        return f.append(g), f.append(h), f.append(j), this.title(e.title), this.content(e.content), 
        this.buttons(e.buttons), this.width(e.width), this[0] = f, this;
    }, b.dialogs = [], b.alert = function(a) {
        var c = $.extend({
            title: "Alerta",
            content: void 0,
            confirm: void 0,
            confirmText: "Ok",
            confirmType: "primary",
            width: "450px"
        }, a), d = new b.button({
            text: c.confirmText,
            type: c.confirmType,
            click: function() {
                c.confirm ? c.confirm() && e.hide() : e.hide();
            }
        }), e = new b.dialog({
            title: c.title,
            content: c.content,
            buttons: [ d ],
            width: c.width,
            storeIndex: !1
        });
        e.show();
    }, b.confirm = function(a) {
        var c = $.extend({
            title: "Confirmação",
            content: void 0,
            confirm: void 0,
            confirmText: "Ok",
            confirmType: "primary",
            confirmFlat: !1,
            cancel: void 0,
            cancelText: "Cancelar",
            cancelType: "primary",
            cancelFlat: !0,
            width: "450px"
        }, a), d = new b.button({
            text: c.confirmText,
            type: c.confirmType,
            flat: c.confirmFlat,
            click: function() {
                c.confirm && c.confirm(), f.hide();
            }
        }), e = new b.button({
            text: c.cancelText,
            type: c.cancelType,
            flat: c.cancelFlat,
            click: function() {
                c.cancel && c.cancel(), f.hide();
            }
        }), f = new b.dialog({
            title: c.title,
            content: c.content,
            buttons: [ e, d ],
            width: c.width,
            storeIndex: !1
        });
        f.show();
    }, b.randomColor = function(a) {
    }, window.Gear = b;
}(), $(function() {
    function a(a) {
        for (var a = a.split(""), b = new Array(), c = a.length, d = "ÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖØòóôõöøÈÉÊËèéêëðÇçÐÌÍÎÏìíîïÙÚÛÜùúûüÑñŠšŸÿýŽž", e = "AAAAAAaaaaaaOOOOOOOooooooEEEEeeeeeCcDIIIIiiiiUUUUuuuuNnSsYyyZz", f = 0; c > f; f++) -1 != d.indexOf(a[f]) ? b[f] = e.substr(d.indexOf(a[f]), 1) : b[f] = a[f];
        return b = b.join("");
    }
    function b(a) {
        if (a.is("[data-gear-pop-message]")) {
            if (!($('.message[data-gear-pop-message="' + a.attr("data-gear-pop-message") + '"]').length > 0)) return void console.error('GEAR-ERROR: (Pop Message) > popMessageInit - Mensagem não encontrada: data-gear-pop-message = "' + a.attr("data-gear-pop-message") + '"');
            if (1 != $('.message[data-gear-pop-message="' + a.attr("data-gear-pop-message") + '"]').length) return void console.error("GEAR-ERROR: (Pop Message) > popMessageInit - Mensagem duplicada: data-gear-pop-message(" + $('.message[data-gear-pop-message="' + a.attr("data-gear-pop-message") + '"]').length + ') = "' + a.attr("data-gear-pop-message") + '"');
            $('.message[data-gear-pop-message="' + a.attr("data-gear-pop-message") + '"]').addClass("ON");
        } else {
            var b, c = !1, d = 0;
            do if (b = Gear.randomChar(10), 0 == $('.pop[data-gear-pop-message="' + b + '"]').length && 0 == $('.message[data-gear-pop-message="' + b + '"]').length && (c = !0), 
            d += 1, d > 250) return void console.error("GEAR-ERROR: (Pop Message) > popMessageInit - Limite de tentativas de criação de identificador único excedidas. (250)"); while (0 == c);
            if (a.attr("data-gear-pop-message", b), a.is("[data-gear-pop-message-content]")) {
                var e = $("<div/>"), f = {
                    balloon: void 0 != a.attr("data-gear-pop-message-balloon") ? !0 : !1,
                    color: a.attr("data-gear-pop-message-color"),
                    background: a.attr("data-gear-pop-message-background"),
                    preference: a.attr("data-gear-pop-message-pref"),
                    content: a.attr("data-gear-pop-message-content"),
                    width: a.attr("data-gear-pop-message-width"),
                    maxWidth: a.attr("data-gear-pop-message-maxwidth")
                }, g = "message ON" + (f.balloon ? " balloon" : "") + (f.color ? " " + f.color : "") + (f.background ? " back-" + f.background : "");
                e.attr({
                    "class": g,
                    "data-gear-pop-message": b
                }).html(f.content), f.width && e.css("width", f.width), f.maxWidth && e.css("max-width", f.maxWidth), 
                $("body").append(e);
            } else $("body").append(a.children(".message").attr("data-gear-pop-message", b).addClass("ON"));
        }
    }
    function c(a, b) {
        var c, d, e, f, g, h, i, j = b.outerWidth(), k = b.outerHeight(), l = 10;
        switch (b.removeClass("pos-top pos-left pos-bottom pos-right"), i = $('.pop[data-gear-pop-message="' + b.attr("data-gear-pop-message") + '"]').attr("data-gear-pop-message-pref")) {
          case "right":
            b.addClass("pos-right"), d = a.pageY - $(window).scrollTop() - k / 2, c = a.pageX - $(window).scrollLeft() + l;
            break;

          case "bottom":
            b.addClass("pos-bottom"), d = a.pageY - $(window).scrollTop() + l, c = a.pageX - $(window).scrollLeft() - j / 2;
            break;

          case "left":
            b.addClass("pos-left"), d = a.pageY - $(window).scrollTop() - k / 2, c = a.pageX - $(window).scrollLeft() - j - l;
            break;

          default:
            b.addClass("pos-top"), d = a.pageY - $(window).scrollTop() - k - l, c = a.pageX - $(window).scrollLeft() - j / 2;
        }
        f = d, e = c, 0 > c && j != $(window).width() ? (b.removeClass("pos-top pos-bottom pos-left").addClass("pos-right"), 
        f = a.pageY - $(window).scrollTop() - k / 2, e = a.pageX - $(window).scrollLeft() + l) : c + j > $(window).width() && j != $(window).width() ? (b.removeClass("pos-top pos-right pos-bottom").addClass("pos-left"), 
        f = a.pageY - $(window).scrollTop() - k / 2, e = a.pageX - $(window).scrollLeft() - j - l) : d + k > $(window).height() || j == $(window).width() ? (b.removeClass("pos-right pos-bottom pos-left").addClass("pos-top"), 
        f = a.pageY - $(window).scrollTop() - k - l, e = a.pageX - $(window).scrollLeft() - j / 2) : 0 > d && (b.removeClass("pos-top pos-right pos-left").addClass("pos-bottom"), 
        f = a.pageY - $(window).scrollTop() + l, e = a.pageX - $(window).scrollLeft() - j / 2), 
        h = 0 > f ? 0 : f + k > $(window).height() ? $(window).height() - k : f, g = 0 > e ? 0 : e + j > $(window).width() ? $(window).width() - j : e, 
        b.css({
            marginTop: h,
            marginLeft: g,
            top: 0,
            left: 0
        });
    }
    $(document).on("keyup focusout", "#txt-gear-main-menu-search", function() {
        var b = a($(this).val().toLowerCase()), c = $(this).closest(".gear-main-menu").find("> .gear-menu-list > ul");
        "" === b ? (c.parent().removeClass("gear-search-started"), c.find("ul, li").removeAttr("style").removeClass("gear-active gear-result")) : (c.parent().addClass("gear-search-started"), 
        c.find("li,ul").removeAttr("style").hide().removeClass("gear-active gear-result").end().find(".submenu").end().find('li[data-search-name*="' + b + '"]').show().addClass("gear-result").parentsUntil(".gear-menu-list", ".submenu").show().addClass("gear-active").children("ul").show());
    }), $(document).on("click", ".gear-mt.gear-tabs .gear-tab", function() {
        var a = $("<div/>", {
            "class": "gear-line"
        }), b = $(this).closest(".gear-tabs-wrap"), c = b.next(".gear-tabs-content-wrap"), d = $(this).closest("li"), e = c.children().eq(d.index());
        b.find(".gear-line").length ? a = b.find(".gear-line") : (a.css({
            left: b.find(".gear-active").position().left + b[0].scrollLeft,
            width: b.find(".gear-active").width()
        }), b.append(a)), d.addClass("gear-active").siblings().removeClass("gear-active"), 
        a.css({
            left: $(this).closest("li").position().left + $(this).closest(".gear-tabs-wrap")[0].scrollLeft,
            width: $(this).closest("li").width()
        }).one("transitionend", function() {
            $(this).remove();
        }), e.addClass("gear-active").siblings().removeClass("gear-active"), c.children(":first").css({
            marginLeft: -(100 * d.index()) + "%"
        });
    }), $(".gear-mt.gear-tabs .gear-tabs-content-wrap").on("scroll", function() {
        $(this).children(".gear-tab-content").length, $(this).innerWidth();
    });
    var d = !1;
    $(document).on("mouseover", function() {
        1 == $("[data-gear-pop-message]").length && $(".message[data-gear-pop-message]").remove();
    }), $(document).on("touchstart", ".pop", function(a) {
        if (1 != d) {
            var e = $(this);
            b(e), c(a.originalEvent.changedTouches[0], $('.message[data-gear-pop-message="' + e.attr("data-gear-pop-message") + '"]')), 
            d = !0;
        }
    }), $(document).on("touchmove", ".pop", function(a) {
        d = "move";
    }), $(document).on("touchend", ".pop", function(a) {
        $(this).is("[data-gear-pop-message-content]") ? $('.message[data-gear-pop-message="' + $(this).attr("data-gear-pop-message") + '"]').remove() : $('.message[data-gear-pop-message="' + $(this).attr("data-gear-pop-message") + '"]').removeClass("ON").removeAttr("data-gear-pop-message").appendTo(this), 
        $(this).removeAttr("data-gear-pop-message"), "move" == d && (d = !1);
    }), $(document).on("mouseover", ".pop", function(a) {
        if (1 != d) {
            var e = $(this);
            b(e), c(a, $('.message[data-gear-pop-message="' + $(this).attr("data-gear-pop-message") + '"]'));
        }
    }), $(document).on("mousemove", ".pop", function(a) {
        if (1 != d) {
            $(this).is("[data-gear-pop-message]") || $(this).mouseover();
            var b = $('.message[data-gear-pop-message="' + $(this).attr("data-gear-pop-message") + '"]');
            return 0 != b.length || $(this).find(".message").length ? void c(a, b) : void console.error("GEAR-ERROR: (Pop Message) > mousemove - Mensagem não encontrada.");
        }
    }), $(document).on("mouseleave", ".pop", function() {
        1 != d && ($(this).is("[data-gear-pop-message-content]") ? $('.message[data-gear-pop-message="' + $(this).attr("data-gear-pop-message") + '"]').remove() : $('.message[data-gear-pop-message="' + $(this).attr("data-gear-pop-message") + '"]').removeClass("ON").removeAttr("data-gear-pop-message").appendTo(this), 
        $(this).removeAttr("data-gear-pop-message"));
    }), $(document).on("click", function() {
        d = !1;
    });
});